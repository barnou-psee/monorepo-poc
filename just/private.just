_init-git:
    #!/bin/bash
    if ! test -d ".git"; then
    	echo "ðŸš€ Initializing git..."
        git init
        git branch -m main
    	echo "ðŸš€ Installing pre-commit hooks..."
        pre-commit install
    fi

_check-uv:
    #!/bin/bash
    if ! command -v uv &> /dev/null; then
    	echo "ðŸš€ uv is not installed, installing..."
    	curl -LsSf https://astral.sh/uv/install.sh | sh
    else
    	echo "ðŸš€ uv is already installed, skipping..."
    fi
    expecting_in_path="$HOME/.cargo/bin"
    if echo $PATH | grep -q $expecting_in_path; then
        echo "ðŸš€ uv is ready to be used"
    else
        echo "ðŸš§ Adding $expecting_in_path to PATH, you should add it permanently"
        export PATH=$expecting_in_path:$PATH
    fi

_setup-conan:
    #!/bin/bash
    conan remote update conancenter --url="https://center2.conan.io"
    echo "ðŸš€ Detecting default conan profile"
    conan profile detect -e
    echo "ðŸš€ Setting up cimaging conan repo"
    remotes=$(conan remote list | awk -F':' '{print $1}')
    if [[ $remotes =~ (^|[[:space:]])cimaging-conan($|[[:space:]]) ]]; then
        echo "ðŸš€ No need to setup conan remote cimaging-conan, already existing"
    else
        conan remote add cimaging-conan https://artifactory.devops.devops-psee.net/artifactory/api/conan/cimaging-conan
        conan remote login cimaging-conan $JFROG_USERNAME -p $JFROG_TOKEN
    fi

_check-jfrog:
    #!/bin/bash
    if [[ -z "${JFROG_USERNAME}" || -z ${JFROG_TOKEN} ]]; then
        echo "â›” JFROG_USERNAME or JFROG_TOKEN is undefined"
        exit 1
    fi

_check-file file:
    #!/bin/bash
    if [ ! -f {{file}} ]; then
        echo "â›” Required file {{file}} is missing"
        exit 1
    fi

_check-sonartoken:
    #!/bin/bash
    if [ -z "${SONAR_TOKEN}" ]; then
    	echo "â›” No environment variable SONAR_TOKEN exist on the system so no analysis can be run."
    	echo "â›” Go on sonarqube, generate a user token and save it as SONAR_TOKEN then rerun"
    	exit 1
    fi
